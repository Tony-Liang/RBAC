<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" namespace="LCW.RBAC.Entities" assembly="LCW.RBAC.Entities">
    <class name="SysUser" table="[dbo].[sys_User]" >
        <id name="UserId" column="[UserId]" type="Int32" >
            <generator class="native" />
        </id>
        <property name="LoginName" column="[LoginName]" type="AnsiString" not-null="true" length="20" /> 
        <property name="Password" column="[Password]" type="AnsiString" not-null="true" length="32" /> 
        <property name="Status" column="[Status]" type="Byte" not-null="true" />

      <one-to-one class="SysUserDetail"  name="SysUserDetail" cascade="all" property-ref="SysUser">       
      </one-to-one>
      <!--虽然我们无法在一对一映射的情况下实现延迟加载，但是我们可以轻易做到“一对多”映射时，延迟加载“集合”中的子对象。我们这个workaround的关键，便是利用了“一对多”情况下的延迟加载，把“一对一”作为“一对多”的特殊情况进行处理-->
      <bag name="SysUserGroupList" inverse="true" cascade="all-delete-orphan" lazy="true" >
            <key>
                <column name="[UserId]" />
            </key>
            <one-to-many class="SysUserGroup" />
        </bag>
        <bag name="SysUserRoleList" inverse="true" cascade="all-delete-orphan" lazy="true" >
            <key>
                <column name="[UserId]" />
            </key>
            <one-to-many class="SysUserRole" />
        </bag>
    </class>
</hibernate-mapping>

